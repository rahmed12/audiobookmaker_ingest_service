-- =====================================================================
-- TABLE: book
-- PURPOSE: Root entity for an uploaded book/file. Tracks ingest progress
--          and pipeline barriers so downstream NLP starts only when safe.
-- WRITES:  ingest-service (creates/updates, sets paragraphs_ready_at)
-- READS:   all services (status checks, counts, joins)
-- NOTES:   paragraphs_ready_at == barrier: all paragraphs 0..N-1 exist.
--          sentences_ready_at is optional future barrier.
-- IDs:     id (UUID) is generated by the application code (R2DBC).
-- =====================================================================

CREATE TABLE book (
  id                   UUID PRIMARY KEY,                 -- app must set
  user_id              UUID NOT NULL,
  title                TEXT,
  sha256               CHAR(64),
  object_uri           TEXT,
  status               TEXT NOT NULL CHECK (
                         status IN ('INGESTING','PARAGRAPHS_READY','SENTENCES_READY','COMPLETE','FAILED')
                       ),
  paragraph_count      INT,
  paragraphs_ready_at  TIMESTAMPTZ,
  sentences_ready_at   TIMESTAMPTZ,
  pipeline_version     TEXT,
  created_at           TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at           TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_book_status ON book(status);
CREATE INDEX idx_book_user   ON book(user_id);

