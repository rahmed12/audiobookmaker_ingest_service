-- =====================================================================
-- TABLE: paragraph
-- PURPOSE: Stores contiguous paragraphs parsed from the source file,
--          ordered by paragraph_idx (0..N-1).
-- WRITES:  ingest-service (bulk insert, idempotent upsert)
-- READS:   corenlp-worker (for sentence split), spacy-llm (context windows)
-- NOTES:   UNIQUE(book_id, paragraph_idx) enables idempotent ingest and
--          fast lookups; use for ON CONFLICT upserts.
-- IDs:     BIGINT identity for compact PK/FK indexes.
-- =====================================================================

CREATE TABLE paragraphs (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  book_id          UUID NOT NULL REFERENCES book(id) ON DELETE CASCADE,
  paragraph_idx    INT  NOT NULL CHECK (paragraph_idx >= 0),  -- 0..N-1
  text             TEXT NOT NULL,
  char_start       INT,
  char_end         INT,
  status           TEXT NOT NULL DEFAULT 'READY'
                     CHECK (status IN ('READY','IN_PROGRESS','DONE','FAILED')),
  created_at       TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at       TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  UNIQUE (book_id, paragraph_idx)
);

CREATE INDEX idx_paragraph_book_idx    ON paragraph(book_id, paragraph_idx);
CREATE INDEX idx_paragraph_book_status ON paragraph(book_id, status, paragraph_idx);
